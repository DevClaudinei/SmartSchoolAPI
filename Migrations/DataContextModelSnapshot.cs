// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartSchool.WebAPI.Data;

#nullable disable

namespace SmartSchool.WebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.22");

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Discipline", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<long>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Disciplines");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Matemática",
                            TeacherId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Física",
                            TeacherId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Português",
                            TeacherId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Inglês",
                            TeacherId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Programação",
                            TeacherId = 5L
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Student", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "33225555",
                            FirstName = "Marta",
                            LastName = "Kent"
                        },
                        new
                        {
                            Id = 2L,
                            Email = "3354288",
                            FirstName = "Paula",
                            LastName = "Isabela"
                        },
                        new
                        {
                            Id = 3L,
                            Email = "55668899",
                            FirstName = "Laura",
                            LastName = "Antonia"
                        },
                        new
                        {
                            Id = 4L,
                            Email = "6565659",
                            FirstName = "Luiza",
                            LastName = "Maria"
                        },
                        new
                        {
                            Id = 5L,
                            Email = "565685415",
                            FirstName = "Lucas",
                            LastName = "Machado"
                        },
                        new
                        {
                            Id = 6L,
                            Email = "456454545",
                            FirstName = "Pedro",
                            LastName = "Alvares"
                        },
                        new
                        {
                            Id = 7L,
                            Email = "9874512",
                            FirstName = "Paulo",
                            LastName = "José"
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.StudentDiscipline", b =>
                {
                    b.Property<long>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("DisciplineId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("StudentId", "DisciplineId");

                    b.HasIndex("DisciplineId");

                    b.ToTable("StudentsDisciplines");

                    b.HasData(
                        new
                        {
                            StudentId = 1L,
                            DisciplineId = 2L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 1L,
                            DisciplineId = 4L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 1L,
                            DisciplineId = 5L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 2L,
                            DisciplineId = 1L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 2L,
                            DisciplineId = 2L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 2L,
                            DisciplineId = 5L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 3L,
                            DisciplineId = 1L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 3L,
                            DisciplineId = 2L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 3L,
                            DisciplineId = 3L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 4L,
                            DisciplineId = 1L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 4L,
                            DisciplineId = 4L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 4L,
                            DisciplineId = 5L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 5L,
                            DisciplineId = 4L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 5L,
                            DisciplineId = 5L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 6L,
                            DisciplineId = 1L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 6L,
                            DisciplineId = 2L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 6L,
                            DisciplineId = 3L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 6L,
                            DisciplineId = 4L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 7L,
                            DisciplineId = 1L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 7L,
                            DisciplineId = 2L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 7L,
                            DisciplineId = 3L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 7L,
                            DisciplineId = 4L,
                            Id = 0L
                        },
                        new
                        {
                            StudentId = 7L,
                            DisciplineId = 5L,
                            Id = 0L
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Teacher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FirstName = "Lauro",
                            LastName = "Fernandes"
                        },
                        new
                        {
                            Id = 2L,
                            FirstName = "Roberto",
                            LastName = "Solto"
                        },
                        new
                        {
                            Id = 3L,
                            FirstName = "Ronaldo",
                            LastName = "Rabelo"
                        },
                        new
                        {
                            Id = 4L,
                            FirstName = "Rodrigo",
                            LastName = "Meneses"
                        },
                        new
                        {
                            Id = 5L,
                            FirstName = "Alexandre",
                            LastName = "Miguel"
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Discipline", b =>
                {
                    b.HasOne("SmartSchool.WebAPI.Models.Teacher", "Teacher")
                        .WithMany("Disciplines")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.StudentDiscipline", b =>
                {
                    b.HasOne("SmartSchool.WebAPI.Models.Discipline", "Discipline")
                        .WithMany("StudentDisciplines")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.WebAPI.Models.Student", "Student")
                        .WithMany("StudentDisciplines")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Discipline", b =>
                {
                    b.Navigation("StudentDisciplines");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Student", b =>
                {
                    b.Navigation("StudentDisciplines");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Teacher", b =>
                {
                    b.Navigation("Disciplines");
                });
#pragma warning restore 612, 618
        }
    }
}
